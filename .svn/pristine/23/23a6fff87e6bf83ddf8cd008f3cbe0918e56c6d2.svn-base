package com.kongkong.free.web;

import java.util.List;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.validation.groups.Default;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.kongkong.common.valid.ValidGroup;
import com.kongkong.free.service.IFreeBoardService;
import com.kongkong.free.vo.FreeBoardSearchVO;
import com.kongkong.free.vo.FreeBoardVO;
import com.kongkong.util.CookieUtils;


@Controller
public class FreeBoardController {
	
	private Logger logger = LoggerFactory.getLogger(getClass());
	
	@Autowired // 앞으론 Inject
	IFreeBoardService freeBoardService;

	// 공지사항
	@RequestMapping("/free/notice.wow")
	public String notice(Model model, FreeBoardSearchVO searchVO) {
		
		List<FreeBoardVO> NoticeList = freeBoardService.getBoardNoticeList(searchVO);
		model.addAttribute("NoticeList", NoticeList);
		
		return "free/notice";
	}

	// Q&A
	@RequestMapping("/free/qna.wow")
	public String qna(Model model, FreeBoardSearchVO searchVO) {
		
		List<FreeBoardVO> QnaList = freeBoardService.getBoardQnaList(searchVO);
		model.addAttribute("QnaList", QnaList);
		
		return "free/qna";
	}
	
	@RequestMapping("/free/freeList.wow")
	public String free(@ModelAttribute("searchVO") FreeBoardSearchVO searchVO, Model model) {
		
		searchVO.setTotalRowCount(freeBoardService.getBoardCount(searchVO));
		searchVO.setting(); 
		List<FreeBoardVO> freeBoardList = freeBoardService.getBoardList(searchVO);
		model.addAttribute("freeBoardList", freeBoardList);
		
		return "free/freeList";
	}

	@RequestMapping("/free/boardHome.wow")
	public String freeList(@ModelAttribute("searchVO") FreeBoardSearchVO searchVO, Model model) {
		
		searchVO.setTotalRowCount(freeBoardService.getBoardCount(searchVO));
		searchVO.setting(); 
		List<FreeBoardVO> freeBoardList = freeBoardService.getBoardList(searchVO);
		model.addAttribute("freeBoardList", freeBoardList);
		
		List<FreeBoardVO> NoticeList = freeBoardService.getBoardNoticeList(searchVO);
		model.addAttribute("NoticeList", NoticeList);

		List<FreeBoardVO> PopularList = freeBoardService.getBoardPopularList(searchVO);
		model.addAttribute("PopularList", PopularList);

		return "free/boardHome";
	}

	@RequestMapping("/free/freeView.wow")
	public String freeView(int boNo, HttpServletResponse resp, HttpServletRequest req) throws Exception {
		
		FreeBoardVO boards = freeBoardService.getBoard(boNo);
		CookieUtils utils = new CookieUtils(req);
		
		if(!utils.existsHit("FREE",boards.getBoNo())){
			freeBoardService.increaseHit(boNo);	
			Cookie cook = utils.saveHit("FREE", boards.getBoNo());
			resp.addCookie(cook);
		}
			req.setAttribute("boards", boards);
			return "free/freeView";
	}
	
	@GetMapping("/free/freeRegist.wow")
	public String freeForm(@ModelAttribute("board") FreeBoardVO board) {
		
		return "free/freeForm";
	}
	
	@PostMapping("/free/freeRegist.wow")
	public String freeRegist(@Validated({Default.class, ValidGroup.RegistType.class}) @ModelAttribute("board") FreeBoardVO board
							 , BindingResult errors, HttpSession session) {
		
		if (errors.hasErrors()) {
			return "free/freeForm";
		}
		
		freeBoardService.registBoard(board);
		
		return "home";
	}
	
	@GetMapping("/free/freeModify.wow")
	public String freeModify(int boNo, Model model) {
		
		FreeBoardVO board = freeBoardService.getBoard(boNo);
		model.addAttribute("board", board);
		
		return "free/freeEdit";
	}
	
	@PostMapping("/free/freeModify.wow")
	public String freeModify(@Validated({Default.class, ValidGroup.ModifyType.class}) @ModelAttribute("board") FreeBoardVO board
						     , BindingResult errors) throws Exception {

		if (errors.hasErrors()) {
			return "free/freeEdit";
		}

		freeBoardService.modifyBoard(board);

		return "home";
	}

	@RequestMapping("/free/freeDelete.wow")
	public String freeDelete(@ModelAttribute("board") FreeBoardVO board) throws Exception {
		
		if(board.getBoNo()<1){
			return "redirect:/free/boardHome.wow";
		}

		freeBoardService.removeBoard(board);

		return "home";
	}

}
